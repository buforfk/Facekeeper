<?php

/**
 * Short description for file
 * 
 * Long description (if any) ...
 * 
 * PHP version 5
 * 
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 * + Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 * + Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation and/or
 * other materials provided with the distribution.
 * + Neither the name of the <ORGANIZATION> nor the names of its contributors
 * may be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * @category  CategoryName 
 * @package   hCal 
 * @author    bu <bu@hax4.in> 
 * @copyright 2010 bu 
 * @license   http://www.opensource.org/licenses/bsd-license.php The BSD License
 * @version   CVS: $Id:$ 
 * @link      http://hcal.hax4.in/ 
 * @see       References to other sections (if any)...
 */


/**
 * Short description for class
 * 
 * Long description (if any) ...
 * 
 * @category  CategoryName 
 * @package   hCal 
 * @author    bu <bu@hax4.in> 
 * @copyright 2010 bu 
 * @license   http://www.opensource.org/licenses/bsd-license.php The BSD License
 * @version   Release: @package_version@ 
 * @link      http://hcal.hax4.in/ 
 * @see       References to other sections (if any)...
 */
    abstract class bPack_Router
    {

    /**
     * Description for protected
     * @var    array     
     * @access protected 
     */
        protected $_routes = array();

    /**
     * Description for protected
     * @var    unknown   
     * @access protected 
     */
        protected $_singleton;
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return mixed           Return description (if any) ...
     * @access public          
     * @throws bPack_Exception Exception description (if any) ...
     */
        public function parse()
        {
            // pull routes in to router
            $this->draw();
            
            // check each route if match
            foreach($this->_routes as $route)
            {
                // if the source is match the route
                if($route->matchRoute() === true)
                {
                    return $route->getRoute();
                }
            }
            
            // else, throw exception alert user
            throw new bPack_Exception('bPack_Router: No matched router');
            
            return false;
        }
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return void      
     * @access protected 
     */
        protected function draw()
        {
            $this->map(new bPack_Route_Default);
        }
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @param  unknown   $route Parameter description (if any) ...
     * @return boolean   Return description (if any) ...
     * @access protected 
     */
        protected function map(bPack_Route $route)
        {
            $this->_routes[] = $route;
            
            return true;
        }
    }
    
/**
 * Short description for class
 * 
 * Long description (if any) ...
 * 
 * @category  CategoryName 
 * @package   hCal 
 * @author    bu <bu@hax4.in> 
 * @copyright 2010 bu 
 * @license   http://www.opensource.org/licenses/bsd-license.php The BSD License
 * @version   Release: @package_version@ 
 * @link      http://hcal.hax4.in/ 
 * @see       References to other sections (if any)...
 */
    abstract class bPack_Route
    {

    /**
     * Description for protected
     * @var    unknown   
     * @access protected 
     */
        protected $_pattern, $_URI;
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @access public 
     */
        abstract public function matchRoute();

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @access public 
     */
        abstract public function getRoute();
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return void   
     * @access public 
     */
	public function __construct()
	{
            $this->_URI = $_SERVER['REQUEST_URI'];
            
            $this->cleanURI();
	}
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return object    Return description (if any) ...
     * @access protected 
     */
        protected function cleanURI()
	{
		$this->_URI = substr($this->_URI, strlen(bPack_BASE_URI),strlen($this->_URI)- strlen(bPack_BASE_URI));

		return $this;
	}
    }
    
/**
 * Short description for class
 * 
 * Long description (if any) ...
 * 
 * @category  CategoryName 
 * @package   hCal 
 * @author    bu <bu@hax4.in> 
 * @copyright 2010 bu 
 * @license   http://www.opensource.org/licenses/bsd-license.php The BSD License
 * @version   Release: @package_version@ 
 * @link      http://hcal.hax4.in/ 
 * @see       References to other sections (if any)...
 */
    class bPack_Route_Default extends bPack_Route
    {

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return boolean Return description (if any) ...
     * @access public  
     */
        public function matchRoute()
        {
            // default route fit all situation
            return true;
        }
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return unknown Return description (if any) ...
     * @access public  
     */
        public function getRoute()
        {
            $this->cleanParam()->splitRoute();

            return $this->_RouteInformation();
        }

    /**
     * Description for protected
     * @var    unknown   
     * @access protected 
     */
        protected $_URI;

    /**
     * Description for protected
     * @var    array     
     * @access protected 
     */
	protected $_URI_Array;
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return unknown   Return description (if any) ...
     * @access protected 
     */
	protected function _baseURI_Length()
	{
	    return strlen(bPack_BASE_URI);
	}

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return unknown   Return description (if any) ...
     * @access protected 
     */
	protected function _RequestURI_Length()
	{
	    return strlen($this->_URI);
	}

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return string    Return description (if any) ...
     * @access protected 
     */
	protected function _Param_Length()
	{
	    return strlen(strstr($this->_URI,'?'));
	}
        
    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return mixed     Return description (if any) ...
     * @access protected 
     */
	protected function cleanParam()
	{
            /**
             * Check if params are exists
             */
            if(strstr($this->_URI,'?'))
            {
                    $this->_URI = substr($this->_URI,0, $this->_RequestURI_Length() - $this->_Param_Length());
            }

            return $this;
	}

	protected function splitRoute()
	{
	    $this->_URI_Array = explode('/',$this->_URI);
	}

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @param  unknown   $needle_key    Parameter description (if any) ...
     * @param  unknown   $default_value Parameter description (if any) ...
     * @return array     Return description (if any) ...
     * @access protected 
     */
	protected function _URI_arrayValue( $needle_key , $default_value)
	{
            if(isset($this->_URI_Array[$needle_key]) && !(empty($this->_URI_Array[$needle_key])))
            {
                return $this->_URI_Array[$needle_key];
            }
            else
            {
                return $default_value;
            }
	}

    /**
     * Short description for function
     * 
     * Long description (if any) ...
     * 
     * @return object    Return description (if any) ...
     * @access protected 
     */
	protected function _RouteInformation()
	{
            $route_obj = new bPack_DataContainer();

            $route_obj->module = $this->_URI_arrayValue(0 , 'default');
            $route_obj->controller = $this->_URI_arrayValue(1 , 'default');
            $route_obj->action = $this->_URI_arrayValue(2 , 'defaultAction');

            return $route_obj;
	}
    }